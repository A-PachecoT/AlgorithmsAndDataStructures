    /*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

import java.awt.event.KeyEvent;
import java.util.Arrays;
import java.util.Comparator;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import model.Person;
import uni.aed.directory.Directory;
import uni.aed.directory.DirectoryV1;
import uni.aed.search.Search;
import uni.aed.search.SearchAlgorithms;

/**
 *
 * @author AndreP
 */
public class FrmDirectory extends javax.swing.JFrame {

    private final DefaultListModel modelList1 = new DefaultListModel();
    private final DefaultListModel modelList2 = new DefaultListModel();
    private final String EMPTY_STRING = "";
    private Directory dir;
    public FrmDirectory() {
        initComponents();
        initialList.setModel(modelList1);
        sortedList.setModel(modelList2);
        txtName.requestFocus();
        dir = new DirectoryV1();
        
        // Centering window
        setLocationRelativeTo(null); 
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jpTables = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        sortedList = new javax.swing.JList<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        initialList = new javax.swing.JList<>();
        jpDataEntry = new javax.swing.JPanel();
        lblName = new javax.swing.JLabel();
        lblAge = new javax.swing.JLabel();
        lblSex = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        txtAge = new javax.swing.JTextField();
        comboBoxGender = new javax.swing.JComboBox<>();
        jpSearchingOptions = new javax.swing.JPanel();
        bttnDelete = new javax.swing.JButton();
        bttnAdd = new javax.swing.JButton();
        bttnSearch = new javax.swing.JButton();
        jpOptions = new javax.swing.JPanel();
        bttnRegister = new javax.swing.JButton();
        bttnClean = new javax.swing.JButton();
        bttnClose = new javax.swing.JButton();
        jpSearchAlgorithm = new javax.swing.JPanel();
        radioBttnLinear = new javax.swing.JRadioButton();
        radioBttnBinary = new javax.swing.JRadioButton();
        lblSearch = new javax.swing.JLabel();
        jpSortingCriterion = new javax.swing.JPanel();
        lblAlgorithm = new javax.swing.JLabel();
        sortingComboBox = new javax.swing.JComboBox<>();
        checkBoxName = new javax.swing.JCheckBox();
        checkBoxAge = new javax.swing.JCheckBox();
        bttnSort = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        sortedList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane2.setViewportView(sortedList);

        initialList.setModel(new javax.swing.AbstractListModel<String>() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public String getElementAt(int i) { return strings[i]; }
        });
        jScrollPane1.setViewportView(initialList);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 75, Short.MAX_VALUE)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(33, 33, 33))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
        );

        javax.swing.GroupLayout jpTablesLayout = new javax.swing.GroupLayout(jpTables);
        jpTables.setLayout(jpTablesLayout);
        jpTablesLayout.setHorizontalGroup(
            jpTablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTablesLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpTablesLayout.setVerticalGroup(
            jpTablesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpTablesLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        lblName.setText("Name");

        lblAge.setText("Age");

        lblSex.setText("Sex");

        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
        });

        txtAge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtAgeActionPerformed(evt);
            }
        });
        txtAge.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtAgeKeyPressed(evt);
            }
        });

        comboBoxGender.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "M", "F" }));
        comboBoxGender.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxGenderActionPerformed(evt);
            }
        });
        comboBoxGender.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comboBoxGenderKeyPressed(evt);
            }
        });

        bttnDelete.setForeground(new java.awt.Color(255, 255, 255));
        bttnDelete.setIcon(new javax.swing.ImageIcon("C:\\Users\\AndreP\\OneDrive - UNIVERSIDAD NACIONAL DE INGENIERIA\\Code\\Algorithms & Data Structures\\AlgorithmsAndDataStructures\\Sort&SearchApp\\src\\main\\resources\\images\\borrar-icon20.png")); // NOI18N

        bttnAdd.setIcon(new javax.swing.ImageIcon("C:\\Users\\AndreP\\OneDrive - UNIVERSIDAD NACIONAL DE INGENIERIA\\Code\\Algorithms & Data Structures\\AlgorithmsAndDataStructures\\Sort&SearchApp\\src\\main\\resources\\images\\agregar-icon18.png")); // NOI18N

        bttnSearch.setIcon(new javax.swing.ImageIcon("C:\\Users\\AndreP\\OneDrive - UNIVERSIDAD NACIONAL DE INGENIERIA\\Code\\Algorithms & Data Structures\\AlgorithmsAndDataStructures\\Sort&SearchApp\\src\\main\\resources\\images\\search-icon20.png")); // NOI18N
        bttnSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnSearchActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpSearchingOptionsLayout = new javax.swing.GroupLayout(jpSearchingOptions);
        jpSearchingOptions.setLayout(jpSearchingOptionsLayout);
        jpSearchingOptionsLayout.setHorizontalGroup(
            jpSearchingOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSearchingOptionsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(bttnSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bttnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bttnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 18, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(8, Short.MAX_VALUE))
        );
        jpSearchingOptionsLayout.setVerticalGroup(
            jpSearchingOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(bttnDelete, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bttnSearch, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(bttnAdd, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jpDataEntryLayout = new javax.swing.GroupLayout(jpDataEntry);
        jpDataEntry.setLayout(jpDataEntryLayout);
        jpDataEntryLayout.setHorizontalGroup(
            jpDataEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDataEntryLayout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jpDataEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jpDataEntryLayout.createSequentialGroup()
                        .addComponent(lblSex, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(comboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpDataEntryLayout.createSequentialGroup()
                        .addComponent(lblAge, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 39, Short.MAX_VALUE)
                        .addComponent(jpSearchingOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jpDataEntryLayout.createSequentialGroup()
                        .addComponent(lblName, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 202, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jpDataEntryLayout.setVerticalGroup(
            jpDataEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpDataEntryLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jpDataEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jpDataEntryLayout.createSequentialGroup()
                        .addGroup(jpDataEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblName)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jpDataEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(lblAge)
                            .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jpSearchingOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jpDataEntryLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblSex)
                    .addComponent(comboBoxGender, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bttnRegister.setText("Register");
        bttnRegister.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnRegisterActionPerformed(evt);
            }
        });
        bttnRegister.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                bttnRegisterKeyPressed(evt);
            }
        });

        bttnClean.setText("Clean");
        bttnClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnCleanActionPerformed(evt);
            }
        });

        bttnClose.setText("Close");
        bttnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnCloseActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpOptionsLayout = new javax.swing.GroupLayout(jpOptions);
        jpOptions.setLayout(jpOptionsLayout);
        jpOptionsLayout.setHorizontalGroup(
            jpOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpOptionsLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jpOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(bttnRegister, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bttnClean, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(bttnClose, javax.swing.GroupLayout.DEFAULT_SIZE, 88, Short.MAX_VALUE))
                .addContainerGap(14, Short.MAX_VALUE))
        );
        jpOptionsLayout.setVerticalGroup(
            jpOptionsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpOptionsLayout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(bttnRegister)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bttnClean)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(bttnClose)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        radioBttnLinear.setSelected(true);
        radioBttnLinear.setText("Linear");

        radioBttnBinary.setText("Binary");

        lblSearch.setText("Searching Algorithm:");

        javax.swing.GroupLayout jpSearchAlgorithmLayout = new javax.swing.GroupLayout(jpSearchAlgorithm);
        jpSearchAlgorithm.setLayout(jpSearchAlgorithmLayout);
        jpSearchAlgorithmLayout.setHorizontalGroup(
            jpSearchAlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSearchAlgorithmLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblSearch)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(radioBttnLinear, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(radioBttnBinary, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jpSearchAlgorithmLayout.setVerticalGroup(
            jpSearchAlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jpSearchAlgorithmLayout.createSequentialGroup()
                .addGap(0, 0, 0)
                .addGroup(jpSearchAlgorithmLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioBttnLinear)
                    .addComponent(radioBttnBinary)
                    .addComponent(lblSearch, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        lblAlgorithm.setFont(new java.awt.Font("Segoe UI", 1, 8)); // NOI18N
        lblAlgorithm.setText("Algorithm:");

        sortingComboBox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bubble" }));

        checkBoxName.setText("Name");

        checkBoxAge.setText("Age");

        bttnSort.setText("Sort");
        bttnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnSortActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jpSortingCriterionLayout = new javax.swing.GroupLayout(jpSortingCriterion);
        jpSortingCriterion.setLayout(jpSortingCriterionLayout);
        jpSortingCriterionLayout.setHorizontalGroup(
            jpSortingCriterionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSortingCriterionLayout.createSequentialGroup()
                .addContainerGap(54, Short.MAX_VALUE)
                .addComponent(sortingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(checkBoxName, javax.swing.GroupLayout.PREFERRED_SIZE, 65, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(checkBoxAge, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bttnSort, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(jpSortingCriterionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpSortingCriterionLayout.createSequentialGroup()
                    .addGap(7, 7, 7)
                    .addComponent(lblAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, 66, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(280, Short.MAX_VALUE)))
        );
        jpSortingCriterionLayout.setVerticalGroup(
            jpSortingCriterionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jpSortingCriterionLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jpSortingCriterionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(sortingComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(checkBoxName)
                    .addComponent(checkBoxAge)
                    .addComponent(bttnSort))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jpSortingCriterionLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jpSortingCriterionLayout.createSequentialGroup()
                    .addGap(9, 9, 9)
                    .addComponent(lblAlgorithm)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jpDataEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jpOptions, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addComponent(jpTables, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jpSortingCriterion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jpSearchAlgorithm, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jpOptions, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jpDataEntry, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jpSearchAlgorithm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jpSortingCriterion, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jpTables, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtAgeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtAgeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtAgeActionPerformed
    private void register(){
        String name = txtName.getText();
        int age = Integer.parseInt(txtAge.getText());
        if(age < 14 || age > 99){
            JOptionPane.showMessageDialog(this, "Edad no válida. Ingrese edad mayor a 14 y menor a 99.", "Non-valid age", age);
        }
        char sex = ((String) comboBoxGender.getSelectedItem()).charAt(0);
        
        Person newPerson = new Person(name,age,sex);
        dir.add(newPerson);
        modelList1.addElement(newPerson.toString());
        clearEntry();
        txtName.requestFocus();
    }
    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            txtAge.requestFocus();
    }//GEN-LAST:event_txtNameKeyPressed

    private void txtAgeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtAgeKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            comboBoxGender.requestFocus();
    }//GEN-LAST:event_txtAgeKeyPressed

    private void comboBoxGenderKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comboBoxGenderKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            bttnRegister.requestFocus();
    }//GEN-LAST:event_comboBoxGenderKeyPressed

    private void bttnRegisterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnRegisterActionPerformed
        register();
    }//GEN-LAST:event_bttnRegisterActionPerformed

    private void bttnCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnCleanActionPerformed
        clearEntry();
    }//GEN-LAST:event_bttnCleanActionPerformed

    private void bttnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnCloseActionPerformed
        this.dispose();
    }//GEN-LAST:event_bttnCloseActionPerformed

    private void bttnRegisterKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_bttnRegisterKeyPressed
        if(evt.getKeyCode()==KeyEvent.VK_ENTER)
            register();
    }//GEN-LAST:event_bttnRegisterKeyPressed

    private void bttnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnSearchActionPerformed
        initialList.clearSelection();
        sortedList.clearSelection();
        String name = txtName.getText();
        String age = txtAge.getText();
        String gender=(String)comboBoxGender.getSelectedItem();
        String person = name + "||" + age + "||" + gender;

        //TODO: Encapsulate getters from the gui for the person into a function
        
        // 1. Verificamos que las condiciones sean correctas
        if(modelList1.size() < 1){
            JOptionPane.showMessageDialog(this, "List is empty.", "ERROR", JOptionPane.WARNING_MESSAGE);
            return;
        }
        if (txtName.getText().isEmpty() && txtAge.getText().isEmpty()){
            JOptionPane.showMessageDialog(this, "You have to complete all person's fields to search", "ERROR", JOptionPane.WARNING_MESSAGE);
            return;
        }

        SearchAlgorithms search = new SearchAlgorithms();
        Object [] listObjects = modelList1.toArray();
        String [] listPersons = new String [listObjects.length];
        for(int i = 0; i < listPersons.length; i++) {
            listPersons[i] = listObjects[i].toString();
        }

        int index = -1;
        boolean found = true;

        if (radioBttnLinear.isSelected()){

            index = search.linearSearch(listPersons, person);
            if(index == search.NOT_FOUND)
                found = false;
            else
                JOptionPane.showMessageDialog(this, "The element from the left list was found in the row: " + (index + 1));
        }

        else if (radioBttnBinary.isSelected()){
            sort();
            Comparator<String> comp = new Comparator<String>() {
                @Override
                public int compare(String str1, String str2) {
                    int comparation = str1.compareTo(str2);
                    if (comparation == 0)
                        return comparation;
                    else
                        return (comparation < 0) ? -1 : 1;
                }
            };
            
            JOptionPane.showMessageDialog(bttnSearch, "Sorting elements...", 
                    "SORTING", JOptionPane.INFORMATION_MESSAGE);
            sort();
            
            index = search.binarySearch(listPersons, person);
            if(index == search.NOT_FOUND)
                found = false;
            else
                JOptionPane.showMessageDialog(this, "The element from the ordered list (right) was found in the row: " + (index + 1));
        }

        if(!found)
            JOptionPane.showMessageDialog(this, "Element not found in the right list.", "ERROR", JOptionPane.WARNING_MESSAGE);

    }//GEN-LAST:event_bttnSearchActionPerformed

    private void bttnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnSortActionPerformed
        sort();
    }//GEN-LAST:event_bttnSortActionPerformed

    private void comboBoxGenderActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxGenderActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_comboBoxGenderActionPerformed

    private void sort() {
        Person[] sortedList;
        
        if(checkBoxName.isSelected())
            sortedList = dir.sort(Person.NAME,(String) sortingComboBox.getSelectedItem());
        else
            sortedList = dir.sort(Person.AGE, (String) sortingComboBox.getSelectedItem());

        modelList2.removeAllElements();
        for (Person p : sortedList) {
            modelList2.addElement(p.toString());
        }
    }

    private void clearEntry(){
        txtName.setText(EMPTY_STRING);
        txtAge.setText(EMPTY_STRING);
        comboBoxGender.setSelectedIndex(0);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmDirectory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmDirectory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmDirectory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmDirectory.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmDirectory().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton bttnAdd;
    private javax.swing.JButton bttnClean;
    private javax.swing.JButton bttnClose;
    private javax.swing.JButton bttnDelete;
    private javax.swing.JButton bttnRegister;
    private javax.swing.JButton bttnSearch;
    private javax.swing.JButton bttnSort;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox checkBoxAge;
    private javax.swing.JCheckBox checkBoxName;
    private javax.swing.JComboBox<String> comboBoxGender;
    private javax.swing.JList<String> initialList;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel jpDataEntry;
    private javax.swing.JPanel jpOptions;
    private javax.swing.JPanel jpSearchAlgorithm;
    private javax.swing.JPanel jpSearchingOptions;
    private javax.swing.JPanel jpSortingCriterion;
    private javax.swing.JPanel jpTables;
    private javax.swing.JLabel lblAge;
    private javax.swing.JLabel lblAlgorithm;
    private javax.swing.JLabel lblName;
    private javax.swing.JLabel lblSearch;
    private javax.swing.JLabel lblSex;
    private javax.swing.JRadioButton radioBttnBinary;
    private javax.swing.JRadioButton radioBttnLinear;
    private javax.swing.JList<String> sortedList;
    private javax.swing.JComboBox<String> sortingComboBox;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtName;
    // End of variables declaration//GEN-END:variables
}
