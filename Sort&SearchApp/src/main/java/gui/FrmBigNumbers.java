/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package gui;

/**
 *
 * @author AndreP
 */
public class FrmBigNumbers extends javax.swing.JFrame {

    /**
     * Creates new form FrmBigNumbers
     */
    public FrmBigNumbers() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        bttnClear = new javax.swing.JToggleButton();
        bttnClose = new javax.swing.JToggleButton();
        bttnManualInput = new javax.swing.JRadioButton();
        lbl = new javax.swing.JLabel();
        lblDataInput = new javax.swing.JLabel();
        bttnAutomaticInput = new javax.swing.JRadioButton();
        panelDataInput = new javax.swing.JPanel();
        panelAutomatic = new javax.swing.JPanel();
        spinnerMinVal = new javax.swing.JSpinner();
        spinnerMaxVal = new javax.swing.JSpinner();
        jLabel1 = new javax.swing.JLabel();
        lblMax = new javax.swing.JLabel();
        spinnerNumElements = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        checkBoxUnique = new javax.swing.JCheckBox();
        bttnGenerate = new javax.swing.JToggleButton();
        panelManual = new javax.swing.JPanel();
        txtValue = new javax.swing.JTextField();
        lblIntroduceDataPoints = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        bttnClear.setText("Clear");
        bttnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnClearActionPerformed(evt);
            }
        });

        bttnClose.setText("Close");
        bttnClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnCloseActionPerformed(evt);
            }
        });

        bttnManualInput.setText("Manual");
        bttnManualInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnManualInputActionPerformed(evt);
            }
        });

        lbl.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        lbl.setText("BIG NUMBER OPERATIONS");

        lblDataInput.setText("Data input:");

        bttnAutomaticInput.setSelected(true);
        bttnAutomaticInput.setText("Automatic");
        bttnAutomaticInput.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnAutomaticInputActionPerformed(evt);
            }
        });

        panelDataInput.setLayout(new java.awt.CardLayout());

        spinnerMaxVal.setValue(10);

        jLabel1.setText("Min. value");

        lblMax.setText("Max. value");

        spinnerNumElements.setValue(8);

        jLabel2.setText("NÂ° elements");

        checkBoxUnique.setText("Unique values");

        bttnGenerate.setText("Generate");
        bttnGenerate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bttnGenerateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelAutomaticLayout = new javax.swing.GroupLayout(panelAutomatic);
        panelAutomatic.setLayout(panelAutomaticLayout);
        panelAutomaticLayout.setHorizontalGroup(
            panelAutomaticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAutomaticLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelAutomaticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelAutomaticLayout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spinnerNumElements, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE))
                    .addComponent(checkBoxUnique, javax.swing.GroupLayout.DEFAULT_SIZE, 128, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bttnGenerate)
                .addGap(26, 26, 26)
                .addGroup(panelAutomaticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(lblMax, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelAutomaticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(spinnerMaxVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerMinVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        panelAutomaticLayout.setVerticalGroup(
            panelAutomaticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelAutomaticLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(panelAutomaticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblMax)
                    .addComponent(jLabel2)
                    .addComponent(spinnerNumElements, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(spinnerMaxVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelAutomaticLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(spinnerMinVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1)
                    .addComponent(checkBoxUnique)
                    .addComponent(bttnGenerate))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        panelDataInput.add(panelAutomatic, "card20");

        txtValue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtValueActionPerformed(evt);
            }
        });
        txtValue.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txtValueKeyTyped(evt);
            }
        });

        lblIntroduceDataPoints.setFont(new java.awt.Font("Segoe UI", 0, 10)); // NOI18N
        lblIntroduceDataPoints.setText("Introduce data points:");

        javax.swing.GroupLayout panelManualLayout = new javax.swing.GroupLayout(panelManual);
        panelManual.setLayout(panelManualLayout);
        panelManualLayout.setHorizontalGroup(
            panelManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelManualLayout.createSequentialGroup()
                .addGap(50, 50, 50)
                .addGroup(panelManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelManualLayout.createSequentialGroup()
                        .addComponent(lblIntroduceDataPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelManualLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(75, Short.MAX_VALUE))
        );
        panelManualLayout.setVerticalGroup(
            panelManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelManualLayout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(panelManualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtValue, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lblIntroduceDataPoints))
                .addContainerGap(22, Short.MAX_VALUE))
        );

        panelDataInput.add(panelManual, "card19");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lblDataInput, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(24, 24, 24)
                        .addComponent(bttnManualInput, javax.swing.GroupLayout.PREFERRED_SIZE, 98, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39)
                        .addComponent(bttnAutomaticInput, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(bttnClear)
                            .addGap(261, 261, 261)
                            .addComponent(bttnClose)
                            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(lbl, javax.swing.GroupLayout.PREFERRED_SIZE, 253, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(panelDataInput, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addContainerGap()))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(lbl)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnManualInput)
                    .addComponent(lblDataInput)
                    .addComponent(bttnAutomaticInput))
                .addGap(18, 18, 18)
                .addComponent(panelDataInput, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 344, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(bttnClear)
                    .addComponent(bttnClose))
                .addGap(26, 26, 26))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void bttnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnClearActionPerformed
        bttnClear.setSelected(false);
//        modelList1.removeAllElements();
//        modelList2.removeAllElements();
    }//GEN-LAST:event_bttnClearActionPerformed

    private void bttnCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnCloseActionPerformed
        // Deselect the toggle button
        bttnClose.setSelected(false);
        this.dispose();
    }//GEN-LAST:event_bttnCloseActionPerformed

    private void bttnManualInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnManualInputActionPerformed
        panelDataInput.removeAll();
        panelDataInput.add(panelManual);
        panelDataInput.repaint();
        panelDataInput.revalidate();
    }//GEN-LAST:event_bttnManualInputActionPerformed

    private void bttnAutomaticInputActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnAutomaticInputActionPerformed
        panelDataInput.removeAll();
        panelDataInput.add(panelAutomatic);
        panelDataInput.repaint();
        panelDataInput.revalidate();
    }//GEN-LAST:event_bttnAutomaticInputActionPerformed

    private void bttnGenerateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bttnGenerateActionPerformed
//        bttnGenerate.setSelected(false);
//        modelList1.removeAllElements();
//        modelList2.removeAllElements();
//
//        Random random = new Random();
//        int min = (int) spinnerMinVal.getValue();
//        int max = (int) spinnerMaxVal.getValue();
//        int randomVal;
//        int n = (int) spinnerNumElements.getValue();
//        int[] arr = new int[n];
//        Boolean uniqueValue = (Boolean) checkBoxUnique.isSelected();
//
//        if (min > max){
//            JOptionPane.showMessageDialog(null, "Range of values not valid.", "Warning", JOptionPane.WARNING_MESSAGE);
//            return;
//        }
//
//        if(!uniqueValue)
//        for (int i = 0; i < n; i++){
//            randomVal = random.nextInt(max - min) + min;
//            arr[i] = randomVal;
//        }
//        else{
//            if (max - min + 1 <= n){
//                JOptionPane.showMessageDialog(null, "Range is not wide enough", "Warning", JOptionPane.WARNING_MESSAGE);
//                return;
//            }
//            boolean isFound;
//            for (int i = 0; i < n; i++){
//                // Search if the value was used
//                do{
//                    isFound = false;
//                    randomVal = random.nextInt(max - min) + min;
//                    for (int j = 0; j < i; j++){
//                        if (randomVal == arr[j])
//                        isFound = true;
//                    }
//                }while(isFound);
//
//                arr[i] = randomVal;
//            }
//        }
//        for (int i = 0; i < n; i++)
//        modelList1.addElement(Integer.toString(arr[i]));
    }//GEN-LAST:event_bttnGenerateActionPerformed

    private void txtValueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtValueActionPerformed
//        modelList1.addElement(txtValue.getText());
//        txtValue.setText("");
    }//GEN-LAST:event_txtValueActionPerformed

    private void txtValueKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtValueKeyTyped
        int key = evt.getKeyChar();
        boolean numero = key >= 48 && key <= 57;
        if(!numero)
        evt.consume();
    }//GEN-LAST:event_txtValueKeyTyped

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FrmBigNumbers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FrmBigNumbers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FrmBigNumbers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FrmBigNumbers.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FrmBigNumbers().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JRadioButton bttnAutomaticInput;
    private javax.swing.JToggleButton bttnClear;
    private javax.swing.JToggleButton bttnClose;
    private javax.swing.JToggleButton bttnGenerate;
    private javax.swing.JRadioButton bttnManualInput;
    private javax.swing.JCheckBox checkBoxUnique;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel lbl;
    private javax.swing.JLabel lblDataInput;
    private javax.swing.JLabel lblIntroduceDataPoints;
    private javax.swing.JLabel lblMax;
    private javax.swing.JPanel panelAutomatic;
    private javax.swing.JPanel panelDataInput;
    private javax.swing.JPanel panelManual;
    private javax.swing.JSpinner spinnerMaxVal;
    private javax.swing.JSpinner spinnerMinVal;
    private javax.swing.JSpinner spinnerNumElements;
    private javax.swing.JTextField txtValue;
    // End of variables declaration//GEN-END:variables
}
